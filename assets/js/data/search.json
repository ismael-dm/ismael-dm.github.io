[ { "title": "Como desarrollar Jekyll en Windows desde VSCode", "url": "/posts/Como-desarrollar-Jekyll-en-Windows-desde-VSCode/", "categories": "Otros", "tags": "VSCode, Windows, Jekyll, Contenedores, Docker", "date": "2021-10-09 21:02:38 +0200", "snippet": "Requisitos para empezarDocker DesktopLo primero que hay que hacer es instalar Docker Desktop (https://www.docker.com/products/docker-desktop), que se encargará de activar todos los requisitos necesarios, así como el WSL2.Extensión “Remote - Containers” en VSCodeEl siguiente paso es instalar la extensión “remote containers” de VSCode. Para ello, simplemente accedemos a la pestaña de extensiones de VSCode y lo instalamos mediante el buscador.Ejecutando Jekyll en VSCodeUna vez realizados los pasos anteriores, abrimos en VSCode la carpeta en la que tenemos nuestro proyecto de Jekyll. Una vez dentro, accedemos a la paleta de comandos (F1 o Crtl+Shift+P) y ejecutamos la opción “Remote-Containers: Open Folder in Container”. En este momento nos preguntará qué carpeta queremos abrir en el contenedor, por lo que selecionamos la carpeta del proyecto.A continuación, nos aparecerá una lista con las imágenes disponibles. Seleccionamos la opción “Show All Definitions” para verlas todas y después buscamos “Jekyll”. A partir de este momento tendremos que escoger la versión deseada, que en mi caso ha sido “buster” con Node.js versión “16”.Ahora solo hay que esperar a que se termine de configurar el contenedor. La primera vez tardará bastante tiempo, pero las siguientes veces será mucho más rápido.Una vez creado el contenedor, ya tendremos Jekyll funcionando en un contenedor conectado con VSCode. Para ejecutar nuestra página abrimos un nuevo terminal:Y lanzamos la página con “jekyll serve”:Y ya podemos acceder desde el navegador a la página web (localhost:4000), en la que se reflejarán todos los cambios que hagamos desde VSCode en directo." }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 08:10:00 +0200", "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts/ of the root directory. Please note that the EXTENSION must be one of md and markdown.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG] # TAG names should always be lowercase--- Note: The posts’ layout has been set to post by default, so there is no need to add the variable layout in Front Matter block.Timezone of dateIn order to accurately record the release date of a post, you should not only setup the timezone of _config.yml but also provide the the post’s timezone in field date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post is designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:categories: [Animal, Insect]tags: [bee]Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for specific post, add the following to post’s Front Matter:---toc: false---CommentsSimilar to TOC, the Disqus comments is loaded by default in each post, and the global switch is defined by variable comments in file _config.yml . If you want to close the comment for specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown language: surround the graph code with ```mermaid and ```.ImagesPreview imageIf you want to add an image to the top of the post contents, specify the attribute src, width, height and alt for the image:---image: src: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. Later section “Image size” will also mention this.Image captionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_Image sizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=&quot;700&quot; height=&quot;400&quot; }Image positionBy default, the image is centered, but you can specify the position by using one of class normal , left and right. For example: Normal position Image will be left aligned in below sample: ![Desktop View](/assets/img/sample/mockup.png){: .normal } Float to the left ![Desktop View](/assets/img/sample/mockup.png){: .left } Float to the right ![Desktop View](/assets/img/sample/mockup.png){: .right } Limitation: Once you specify the position of an image, it is forbidden to add the image caption.Image shadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN url by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN url will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&amp;lt;img src=&quot;https://cdn.com/path/to/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---Code BlockMarkdown symbols ``` can easily create a code block as follows:This is a plaintext code snippet.Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value``` Limination: The Jekyll style highlight tag ais not compatible with this theme.Line NumberBy default, all languages except plaintext, console and terminal will display line numbers. When you want to hide the line number of the code block, you can append {: .nolineno} at the next line:```shellecho &#39;No more line numbers!&#39;```{: .nolineno}Specifying the FilenameYou may have noticed that the code language will be displayed on the left side of the header of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=&quot;path/to/file&quot; }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains &#39;Pack&#39; %} This product&#39;s title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts." } ]
